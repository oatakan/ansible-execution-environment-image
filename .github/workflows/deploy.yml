# Workflow name
name: EE build (reusable)


# Controls when the workflow will run
on:
  # This is a reusable workflow
  workflow_call:
    inputs:
      EE_FOLDER_NAME:
        description: 'name of the folder where the EE is located (will become the name of the EE)'
        default: ''
        required: true
        type: string
      EE_IMAGE_TAG:
        description: 'just one tag for image build'
        default: 'latest'
        required: true
        type: string
      QUAY_USER:
        description: 'this is used during the image push to quay'
        required: true
        type: string
      PLATFORMS_JSON:
        description: 'platforms for matrix as JSON string'
        default: '["linux/amd64"]'
        required: false
        type: string
    secrets:
      QUAY_PASSWORD:
        description: 'needed for registry login'
        required: false
      QUAY_USERNAME:
        description: 'needed for registry login'
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(inputs.PLATFORMS_JSON) }}
    environment: deploy
    steps:

      # In this job, all steps begin with a name
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install python requirements (ansible-builder)
        run: pip install -r requirements.txt

      - name: Log in to quay.io
        id: registry-quay
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Build image
        id: build-image
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: |
          ARCH=$(echo ${{ matrix.platform }} | cut -d '/' -f2)
          
          ansible-builder build -v 3 \
          --context=../${{ inputs.EE_FOLDER_NAME }} \
          --tag=${{ inputs.EE_FOLDER_NAME }}:${{ inputs.EE_IMAGE_TAG }}-${{ matrix.platform | split('/') | last }} \
          --tag=${{ inputs.EE_FOLDER_NAME }}:${{ github.sha }}

      - name: Push To quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ inputs.EE_FOLDER_NAME }}
          tags: |
            ${{ inputs.EE_IMAGE_TAG }}-${{ matrix.platform | split('/') | last }}
            ${{ github.sha }}
          registry: quay.io/${{ inputs.QUAY_USER }}/
          username: ${{ secrets.REDHAT_USERNAME }}
          password: ${{ secrets.REDHAT_PASSWORD }}

      - name: Print summary
        working-directory: ${{ inputs.EE_FOLDER_NAME }}
        run: |
          echo "## :rocket: Usage" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Image pushed to repository: [${{ steps.push-to-quay.outputs.registry-path }}](https://${{ steps.push-to-quay.outputs.registry-path }})" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull ${{ steps.push-to-quay.outputs.registry-path }}\`" >> $GITHUB_STEP_SUMMARY
          echo "> \`podman pull quay.io/${{ inputs.QUAY_USER }}/${{ inputs.EE_FOLDER_NAME }}:${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Ansible info:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`podman run ${{ inputs.EE_FOLDER_NAME }} ansible --version`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Installed collections:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`podman run ${{ inputs.EE_FOLDER_NAME }} ansible-galaxy collection list`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "## :pushpin: Containerfile:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "`cat Containerfile`" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  push-manifest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Log in to quay.io
        id: registry-quay
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Create and Push Docker Manifest
        run: |
          # Enable experimental feature for Docker CLI
          export DOCKER_CLI_EXPERIMENTAL=enabled
          
          # Define image path
          IMAGE_PATH="quay.io/${{ inputs.QUAY_USER }}/${{ inputs.EE_FOLDER_NAME }}"
          
          # Create Docker manifest
          docker manifest create $IMAGE_PATH:latest \
            $IMAGE_PATH:${{ inputs.EE_IMAGE_TAG }}-amd64 \
            $IMAGE_PATH:${{ inputs.EE_IMAGE_TAG }}-arm64
          
          # Annotate each architecture-specific manifest (if necessary)
          docker manifest annotate $IMAGE_PATH:latest $IMAGE_PATH:${{ inputs.EE_IMAGE_TAG }}-amd64 --arch amd64
          docker manifest annotate $IMAGE_PATH:latest $IMAGE_PATH:${{ inputs.EE_IMAGE_TAG }}-arm64 --arch arm64
          
          # Push the manifest to the registry
          docker manifest push --purge $IMAGE_PATH:latest

